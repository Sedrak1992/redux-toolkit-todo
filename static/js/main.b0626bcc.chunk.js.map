{"version":3,"sources":["features/todos/todosSlice.js","features/todos/Todos.js","App.js","App/store.js","index.js"],"names":["randomColor","Math","floor","random","toString","initialState","name","color","selected","counterSlice","createSlice","reducers","addtodo","state","action","push","payload","decreTodo","splice","toglggel","actions","Counter","useState","value","setInputValue","count","useSelector","counter","dispatch","useDispatch","style","marginTop","Box","mb","TextField","label","variant","onChange","e","target","IconButton","onClick","alert","display","alignItems","flexDirection","map","item","i","mt","p","borderRadius","justifyContent","width","bgcolor","sx","textDecoration","Checkbox","checked","App","className","store","configureStore","reducer","counterReducer","ReactDOM","render","document","getElementById"],"mappings":"6OAEMA,EAAc,4BAAUC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,MAEpEC,EAAgB,CAClB,CAAEC,KAAM,aAAcC,MAAOP,IAAcQ,UAAS,GACpD,CAAEF,KAAM,IAAKC,MAAOP,IAAeQ,UAAS,GAC5C,CAAEF,KAAM,IAAKC,MAAOP,IAAeQ,UAAS,IAGnCC,EAAeC,YAAY,CACtCJ,KAAM,UACND,eACAM,SAAU,CACRC,QAAS,SAACC,EAAMC,GACdD,EAAME,KAAK,CAACT,KAAMQ,EAAOE,QAAST,MAAOP,IAAeQ,UAAS,KAEnES,UAAW,SAACJ,EAAMC,GACdD,EAAMK,OAAOJ,EAAOE,QAAS,IAEjCG,SAAU,SAACN,EAAMC,GACbD,EAAMC,EAAOE,SAASR,UAAYK,EAAMC,EAAOE,SAASR,aAMzD,EAAwCC,EAAaW,QAA7CR,EAAR,EAAQA,QAASK,EAAjB,EAAiBA,UAAUE,EAA3B,EAA2BA,SAEnBV,IAAf,Q,8ECnBe,SAASY,IACtB,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAQC,aAAY,SAACb,GAAD,OAAWA,EAAMc,WACrCC,EAAWC,cAWjB,OACE,8BACE,sBAAKC,MAAO,CAAEC,UAAW,OAAOxB,MAAM,QAAtC,UACE,eAACyB,EAAA,EAAD,CAAKC,GAAI,EAAT,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,eACNC,QAAQ,WACRb,MAAOA,EACPc,SAAU,SAACC,GAAD,OAAOd,EAAcc,EAAEC,OAAOhB,UAG1C,cAACiB,EAAA,EAAD,CAAY,aAAW,kBAAkBC,QApB3B,WACP,IAATlB,EACFmB,MAAM,WAENd,EAAShB,EAAQW,IACjBC,EAAc,MAeV,SACE,cAAC,IAAD,SAGJ,cAACQ,EAAA,EAAD,CAAKW,QAAQ,OAAOC,WAAW,SAASC,cAAc,SAAtD,SACGpB,EAAMqB,KAAI,SAACC,EAAMC,GAAP,OACT,eAAChB,EAAA,EAAD,CAEEiB,GAAI,EACJC,EAAG,EACHC,aAAc,EACdR,QAAQ,OACRS,eAAe,gBACfC,MAAM,MACNC,QAASP,EAAKxC,MACdgD,GAAI,CACFC,eAAiC,GAAjBT,EAAKvC,SAAmB,eAAiB,QAV7D,UAaE,eAACwB,EAAA,EAAD,WACE,cAACyB,EAAA,EAAD,CACEC,QAASX,EAAKvC,SACdiC,QAAS,kBAAMb,EAAST,EAAS6B,OAChC,IACFD,EAAKzC,QAER,cAACkC,EAAA,EAAD,CAAYC,QAAS,kBAAMb,EAASX,EAAU+B,KAA9C,SACE,cAAC,IAAD,QApBGA,a,MC9BJW,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCHOC,EAAQC,YAAe,CAClCC,QAAS,CACPpC,QAASqC,KCCbC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.b0626bcc.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst randomColor = () => `#${Math.floor(Math.random()*16777215).toString(16)}`;\n\nconst initialState =  [\n    { name: \"sport live\", color: randomColor(),selected:false },\n    { name: \"2\", color: randomColor() ,selected:false},\n    { name: \"2\", color: randomColor() ,selected:false},\n   ]\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    addtodo: (state,action) => {\n      state.push({name: action.payload, color: randomColor() ,selected:false}) \n    },\n    decreTodo: (state,action) => {\n        state.splice(action.payload, 1);\n    },\n    toglggel: (state,action) => {\n        state[action.payload].selected = !state[action.payload].selected \n    }\n  },\n})\n\n// Action creators are generated for each case reducer functio\nexport const { addtodo, decreTodo,toglggel } = counterSlice.actions\n\nexport default counterSlice.reducer;","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addtodo, decrement, decreTodo, toglggel } from \"./todosSlice\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default function Counter() {\n  const [value, setInputValue] = useState(\"\");\n  const count = useSelector((state) => state.counter);\n  const dispatch = useDispatch();\n\n  const hendleAddTodo = () => {\n    if (value == \"\") {\n      alert(\"g;'ilh\");\n    } else {\n      dispatch(addtodo(value));\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <div style={{ marginTop: \"50px\",color:'#fff' }}>\n        <Box mb={2}>\n          <TextField\n            label=\"add todo....\"\n            variant=\"outlined\"\n            value={value}\n            onChange={(e) => setInputValue(e.target.value)}\n          />\n\n          <IconButton aria-label=\"Increment value\" onClick={hendleAddTodo}>\n            <AddIcon />\n          </IconButton>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n          {count.map((item, i) => (\n            <Box\n              key={i}\n              mt={1}\n              p={2}\n              borderRadius={4}\n              display=\"flex\"\n              justifyContent=\"space-between\"\n              width=\"40%\"\n              bgcolor={item.color}\n              sx={{\n                textDecoration: item.selected == true ? \"line-through\" : \"none\",\n              }}\n            >\n              <Box>\n                <Checkbox\n                  checked={item.selected}\n                  onClick={() => dispatch(toglggel(i))}\n                />{\" \"}\n                {item.name}\n              </Box>\n              <IconButton onClick={() => dispatch(decreTodo(i))}>\n                <DeleteIcon />\n              </IconButton>\n            </Box>\n          ))}\n        </Box>\n      </div>\n    </div>\n  );\n}\n","import  Todos from './features/todos/Todos';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Todos />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/todos/todosSlice'\n\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './App/store.js'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}