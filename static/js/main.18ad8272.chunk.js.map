{"version":3,"sources":["features/counter/counterSlice.js","features/counter/Counter.js","App.js","App/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","value","reducers","addtodo","state","action","push","payload","decrement","incrementByAmount","actions","Counter","useState","setInputValue","count","useSelector","counter","dispatch","useDispatch","deleteTodo","i","filter","item","index","console","log","style","marginTop","onChange","e","target","onClick","alert","border","map","App","className","store","configureStore","reducer","counterReducer","ReactDOM","render","document","getElementById"],"mappings":"4OAMaA,EAAeC,YAAY,CACtCC,KAAM,UACNC,aANmB,CAClBC,MAAO,CAAC,OAAO,UAAU,YAM1BC,SAAU,CACRC,QAAS,SAACC,EAAMC,GACdD,EAAMH,MAAMK,KAAKD,EAAOE,UAE1BC,UAAW,SAACJ,GACVA,EAAMH,OAAS,GAEjBQ,kBAAmB,SAACL,EAAOC,GACzBD,EAAMH,OAASI,EAAOE,YAMrB,EAAkDV,EAAaa,QAAvDP,EAAR,EAAQA,QAEAN,GAFR,EAAiBW,UAAjB,EAA4BC,kBAEpBZ,EAAf,S,wBCnBO,SAASc,IACd,MAA+BC,mBAAS,IAAxC,mBAAOX,EAAP,KAAcY,EAAd,KACMC,EAAQC,aAAY,SAACX,GAAD,OAAWA,EAAMY,QAAQf,SAC7CgB,EAAWC,cASXC,EAAa,SAACC,GAClBP,GAAc,SAACC,GAAD,OACdA,EAAMO,QAAO,SAACC,EAAMC,GAAP,OAAiBA,IAAUH,SAI1C,OADAI,QAAQC,IAAIxB,GAEV,8BACE,sBAAKyB,MAAO,CAAEC,UAAW,QAAzB,UACE,uBACE1B,MAAOA,EACP2B,SAAU,SAACC,GAAD,OAAOhB,EAAcgB,EAAEC,OAAO7B,UAE1C,wBAAQ,aAAW,kBAAkB8B,QApBrB,WACpBd,EAASd,EAAQF,IACjBY,EAAc,IACD,IAATZ,GACF+B,MAAM,WAgBJ,qBAGA,qBAAKN,MAAO,CAAEO,OAAQ,iBAAtB,SACGnB,EAAMoB,KAAI,SAACZ,EAAMF,GAAP,OACT,gCACG,IACAE,EAFH,IAES,cAAC,IAAD,CAAYS,QAASZ,MAFpBC,a,MCxBPe,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAACzB,EAAD,OCHO0B,EAAQC,YAAe,CAClCC,QAAS,CACPvB,QAASwB,KCCbC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.18ad8272.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst initialState = {\n   value: [\"gufi\",\"uhefrqi\",\"qhk jhg\"],\n}\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    addtodo: (state,action) => {\n      state.value.push(action.payload) \n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload\n    },\n  },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addtodo, decrement, incrementByAmount } = counterSlice.actions\n\nexport default counterSlice.reducer;","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addtodo, decrement, increment } from \"./counterSlice\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport function Counter() {\n  const [value, setInputValue] = useState(\"\");\n  const count = useSelector((state) => state.counter.value);\n  const dispatch = useDispatch();\n\n  const hendleAddTodo = () => {\n    dispatch(addtodo(value));\n    setInputValue(\"\");\n    if (value == \"\") {\n      alert(\"g;'ilh\");\n    }\n  };\n  const deleteTodo = (i) => {\n    setInputValue((count) =>\n    count.filter((item, index) => index !== i)\n    );\n  };\n  console.log(value);\n  return (\n    <div>\n      <div style={{ marginTop: \"50px\" }}>\n        <input\n          value={value}\n          onChange={(e) => setInputValue(e.target.value)}\n        />\n        <button aria-label=\"Increment value\" onClick={hendleAddTodo}>\n          add....\n        </button>\n        <div style={{ border: \"1px red solid\" }}>\n          {count.map((item, i) => (\n            <div key={i}>\n              {\" \"}\n              {item} <DeleteIcon onClick={deleteTodo} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { Counter } from './features/counter/Counter';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Counter />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice'\n\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n  },\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { store } from './App/store.js'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}